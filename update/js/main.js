"use strict";var _select=_interopRequireDefault(require("./select.js"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}function _classPrivateMethodGet(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function _createForOfIteratorHelper(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,l=!0,c=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return l=e.done,e},e:function(e){c=!0,a=e},f:function(){try{l||null==n.return||n.return()}finally{if(c)throw a}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var getTemplate=function(e,t,n,r){var o=null!=e?e:"",a=t.map((function(e){var t="";return e.id===n&&(o=e.value,t="selected"),'\n            <li class="select-option '.concat(t,'" data-type="item" data-id="').concat(e.id,'">').concat(e.value,"</li>\n        ")}));return'\n    <div class="select-backdrop" data-type="backdrop">\n    \n    </div>\n    <div data-value class="select-input" data-type="input">\n        <span data-type="value">'.concat(o,'</span>\n        <div data-type="caret" class="select-caret">\n            <img src="').concat(r||"img/icons/blue-arrow.svg",'">\n        </div>\n    </div>\n    <div class="select-dropdown">\n        <ul class="select-options">\n           ').concat(a.join(""),"\n        </ul>\n    </div>\n    ")},select=new _select.default("#select",{placeholder:"Please select category",originalSelect:"#originalSelect"}),langSelect=new _select.default("#langSelect",{originalSelect:"#oldLangSelect",selectedId:1,caretImg:"img/icons/yellow-arrow.svg"});window.s=langSelect;var anchors=document.querySelectorAll('a[href*="#"]');console.log(anchors);var _step,_iterator=_createForOfIteratorHelper(anchors);try{var _loop=function(){var e=_step.value;e.addEventListener("click",(function(t){t.preventDefault();var n=e.getAttribute("href");document.querySelector(""+n).scrollIntoView({behavior:"smooth",block:"start"})}))};for(_iterator.s();!(_step=_iterator.n()).done;)_loop()}catch(e){_iterator.e(e)}finally{_iterator.f()}var getModalTemplate=function(e){return'\n        <div class="overlay">\n            <div class="modal-body">\n                <div class="modal-header">\n                    <div data-type="close" class="modal-close">&times;</div>\n                </div>\n                <div class="modal-content">\n                    '.concat(e,"\n                </div>\n            </div>\n        </div>\n    ")},_render=new WeakSet,_setup=new WeakSet,Modal=function(){function e(t,n){_classCallCheck(this,e),_setup.add(this),_render.add(this),this.$el=document.querySelector(t),this.selector=t,this.openButton=n.openButton,console.log(n.openButton),_classPrivateMethodGet(this,_render,_render2).call(this),_classPrivateMethodGet(this,_setup,_setup2).call(this)}return _createClass(e,[{key:"clickHandler",value:function(e){var t=e.target.dataset.type;"close"===t?(console.log("This method has been worked!"),close()):"open"===t&&this.open()}},{key:"open",value:function(){console.log(this),this.$el.classList.add("open")}},{key:"close",value:function(){document.querySelector(this.selector).classList.remove("open")}}]),e}(),_render2=function(){var e=this.$el.innerHTML;this.$el.classList.add("modal"),this.$el.innerHTML=getModalTemplate(e)},_setup2=function(){this.clickHandler=this.clickHandler.bind(this),console.log(this.clickHandler),this.$el.addEventListener("click",this.clickHandler),document.querySelector('[data-type="open"]').addEventListener("click",this.open)},modal=new Modal("#modal",{openButton:"#openModal"});window.m=modal;var burger=document.querySelector("#burger"),closeMenu=document.querySelector("#closeMenu");burger.addEventListener("touchstart",(function(){console.log("ahahhaha")}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiX3NlbGVjdCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiX2RlZmluZVByb3BlcnRpZXMiLCJ0YXJnZXQiLCJwcm9wcyIsImkiLCJsZW5ndGgiLCJkZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJrZXkiLCJfY3JlYXRlQ2xhc3MiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJwcm90b3R5cGUiLCJfY2xhc3NQcml2YXRlTWV0aG9kR2V0IiwicmVjZWl2ZXIiLCJwcml2YXRlU2V0IiwiZm4iLCJoYXMiLCJfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIsIm8iLCJhbGxvd0FycmF5TGlrZSIsIml0IiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJBcnJheSIsImlzQXJyYXkiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJGIiwicyIsIm4iLCJkb25lIiwidmFsdWUiLCJlIiwiX2UiLCJmIiwiZXJyIiwibm9ybWFsQ29tcGxldGlvbiIsImRpZEVyciIsInN0ZXAiLCJuZXh0IiwiX2UyIiwibWluTGVuIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJ0b1N0cmluZyIsImNhbGwiLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsImZyb20iLCJ0ZXN0IiwiYXJyIiwibGVuIiwiYXJyMiIsImdldFRlbXBsYXRlIiwicGxhY2Vob2xkZXIiLCJkYXRhIiwic2VsZWN0ZWRJZCIsImltZyIsInRleHQiLCJpdGVtcyIsIm1hcCIsIml0ZW0iLCJjbHMiLCJpZCIsImNvbmNhdCIsImpvaW4iLCJzZWxlY3QiLCJTZWxlY3QiLCJvcmlnaW5hbFNlbGVjdCIsImxhbmdTZWxlY3QiLCJjYXJldEltZyIsIndpbmRvdyIsImFuY2hvcnMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjb25zb2xlIiwibG9nIiwiX3N0ZXAiLCJfaXRlcmF0b3IiLCJfbG9vcCIsImFuY2hvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJwcmV2ZW50RGVmYXVsdCIsImJsb2NrSUQiLCJnZXRBdHRyaWJ1dGUiLCJxdWVyeVNlbGVjdG9yIiwic2Nyb2xsSW50b1ZpZXciLCJiZWhhdmlvciIsImJsb2NrIiwiZ2V0TW9kYWxUZW1wbGF0ZSIsImNvbnRlbnQiLCJfcmVuZGVyIiwiV2Vha1NldCIsIl9zZXR1cCIsIk1vZGFsIiwic2VsZWN0b3IiLCJvcHRpb25zIiwidGhpcyIsImFkZCIsIiRlbCIsIm9wZW5CdXR0b24iLCJfcmVuZGVyMiIsIl9zZXR1cDIiLCJldmVudCIsInR5cGUiLCJkYXRhc2V0IiwiY2xvc2UiLCJvcGVuIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiaW5uZXJIVE1MIiwiY2xpY2tIYW5kbGVyIiwiYmluZCIsIm1vZGFsIiwibSIsImJ1cmdlciIsImNsb3NlTWVudSJdLCJtYXBwaW5ncyI6IkFBQUEsYUFFQSxJQUFBQSxRQUFBQyx1QkFBQUMsUUFBQSxnQkFFQSxTQUFTRCx1QkFBdUJFLEdBQU8sT0FBT0EsR0FBT0EsRUFBSUMsV0FBYUQsRUFBTSxDQUFFRSxRQUFXRixHQUV6RixTQUFTRyxnQkFBZ0JDLEVBQVVDLEdBQWUsS0FBTUQsYUFBb0JDLEdBQWdCLE1BQU0sSUFBSUMsVUFBVSxxQ0FFaEgsU0FBU0Msa0JBQWtCQyxFQUFRQyxHQUFTLElBQUssSUFBSUMsRUFBSSxFQUFHQSxFQUFJRCxFQUFNRSxPQUFRRCxJQUFLLENBQUUsSUFBSUUsRUFBYUgsRUFBTUMsR0FBSUUsRUFBV0MsV0FBYUQsRUFBV0MsYUFBYyxFQUFPRCxFQUFXRSxjQUFlLEVBQVUsVUFBV0YsSUFBWUEsRUFBV0csVUFBVyxHQUFNQyxPQUFPQyxlQUFlVCxFQUFRSSxFQUFXTSxJQUFLTixJQUU3UyxTQUFTTyxh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R0FDQTdCLFFBQVFDLElBQUksZ0NBQ1o4QixTQUNnQixTQUFURixHQUNQUCxLQUFLVSxTQUtaLENBQ0RuRyxJQUFLLE9BQ0x1QixNQUFPLFdBRkg0QyxRQUFRQyxJQUFJcUIsTUFDWkEsS0FBS0UsSUFBSVMsVUFBVVYsSUFBSSxVQUsxQixDQUNEMUYsSUFBSyxRQUNMdUIsTUFBTyxXQUhIMEMsU0FBU1ksY0FBY1ksS0FBS0YsVUFBVWEsVUFBVUMsT0FBTyxZQVF0RGYsRUEzQ2dCLEdBOENyQk8sU0FBVyxXQXZDUCxJQUFJWCxFQUFVTyxLQUFLRSxJQUFJVyxVQUN2QmIsS0FBS0UsSUFBSVMsVUFBVVYsSUFBSSxTQUN2QkQsS0FBS0UsSUFBSVcsVUFBWXJCLGlCQUFpQkMsSUEyQzFDWSxRQUFVLFdBdkNOTCxLQUFLYyxhQUFlZCxLQUFLYyxhQUFhQyxLQUFLZixNQUMzQ3RCLFFBQVFDLElBQUlxQixLQUFLYyxjQUNqQmQsS0FBS0UsSUFBSWxCLGlCQUFpQixRQUFTZ0IsS0FBS2MsY0FDeEN0QyxTQUFTWSxjQUFjLHNCQUFzQkosaUJBQWlCLFFBQVNnQixLQUFLVSxPQXVCaEZNLE1BQVEsSUFBSW5CLE1BQU0sU0FBVSxDQUM1Qk0sV0FBWSxlQUdoQjdCLE9BQU8yQyxFQUFJRCxNQUlYLElBQU1FLE9BQVMxQyxTQUFTWSxjQUFjLFdBQ2hDK0IsVUFBWTNDLFNBQVNZLGNBQWMsY0FFekM4QixPQUFPbEMsaUJBQWlCLGNBQWMsV0FDbENOLFFBQVFDLElBQUkiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNlbGVjdCBJbXBvcnRcclxuXHJcbmltcG9ydCBTZWxlY3QgZnJvbSAnLi9zZWxlY3QuanMnO1xyXG5cclxuY29uc3QgZ2V0VGVtcGxhdGUgPSAocGxhY2Vob2xkZXIsIGRhdGEsIHNlbGVjdGVkSWQsIGltZykgPT4ge1xyXG4gICAgbGV0IHRleHQgPSBwbGFjZWhvbGRlciA/PyAnJztcclxuICAgIGNvbnN0IGl0ZW1zID0gZGF0YS5tYXAoaXRlbSA9PiB7XHJcbiAgICAgICAgbGV0IGNscyA9ICcnO1xyXG4gICAgICAgIGlmIChpdGVtLmlkID09PSBzZWxlY3RlZElkKSB7XHJcbiAgICAgICAgICAgIHRleHQgPSBpdGVtLnZhbHVlO1xyXG4gICAgICAgICAgICBjbHMgPSAnc2VsZWN0ZWQnO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYFxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJzZWxlY3Qtb3B0aW9uICR7Y2xzfVwiIGRhdGEtdHlwZT1cIml0ZW1cIiBkYXRhLWlkPVwiJHtpdGVtLmlkfVwiPiR7aXRlbS52YWx1ZX08L2xpPlxyXG4gICAgICAgIGBcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiBgXHJcbiAgICA8ZGl2IGNsYXNzPVwic2VsZWN0LWJhY2tkcm9wXCIgZGF0YS10eXBlPVwiYmFja2Ryb3BcIj5cclxuICAgIFxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2IGRhdGEtdmFsdWUgY2xhc3M9XCJzZWxlY3QtaW5wdXRcIiBkYXRhLXR5cGU9XCJpbnB1dFwiPlxyXG4gICAgICAgIDxzcGFuIGRhdGEtdHlwZT1cInZhbHVlXCI+JHt0ZXh0fTwvc3Bhbj5cclxuICAgICAgICA8ZGl2IGRhdGEtdHlwZT1cImNhcmV0XCIgY2xhc3M9XCJzZWxlY3QtY2FyZXRcIj5cclxuICAgICAgICAgICAgPGltZyBzcmM9XCIkeyFpbWcgPyAnaW1nL2ljb25zL2JsdWUtYXJyb3cuc3ZnJyA6IGltZ31cIj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cInNlbGVjdC1kcm9wZG93blwiPlxyXG4gICAgICAgIDx1bCBjbGFzcz1cInNlbGVjdC1vcHRpb25zXCI+XHJcbiAgICAgICAgICAgJHtpdGVtcy5qb2luKCcnKX1cclxuICAgICAgICA8L3VsPlxyXG4gICAgPC9kaXY+XHJcbiAgICBgXHJcbn07XHJcblxyXG5jb25zdCBzZWxlY3QgPSBuZXcgU2VsZWN0KCcjc2VsZWN0Jywge1xyXG4gICAgcGxhY2Vob2xkZXI6ICdQbGVhc2Ugc2VsZWN0IGNhdGVnb3J5JyxcclxuICAgIG9yaWdpbmFsU2VsZWN0OiAnI29yaWdpbmFsU2VsZWN0JyxcclxufSk7XHJcblxyXG5jb25zdCBsYW5nU2VsZWN0ID0gbmV3IFNlbGVjdCgnI2xhbmdTZWxlY3QnLCB7XHJcbiAgICBvcmlnaW5hbFNlbGVjdDogJyNvbGRMYW5nU2VsZWN0JyxcclxuICAgIHNlbGVjdGVkSWQ6IDEsXHJcbiAgICBjYXJldEltZzogJ2ltZy9pY29ucy95ZWxsb3ctYXJyb3cuc3ZnJ1xyXG59KTtcclxuXHJcbndpbmRvdy5zID0gbGFuZ1NlbGVjdDtcclxuXHJcbi8vIFNtb290aCBTY3JvbGxcclxuXHJcbmNvbnN0IGFuY2hvcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdhW2hyZWYqPVwiI1wiXScpO1xyXG5jb25zb2xlLmxvZyhhbmNob3JzKTtcclxuZm9yIChsZXQgYW5jaG9yIG9mIGFuY2hvcnMpIHtcclxuICAgIGFuY2hvci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGNvbnN0IGJsb2NrSUQgPSBhbmNob3IuZ2V0QXR0cmlidXRlKCdocmVmJyk7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignJyArIGJsb2NrSUQpLnNjcm9sbEludG9WaWV3KHtcclxuICAgICAgICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnLFxyXG4gICAgICAgICAgICBibG9jazogJ3N0YXJ0J1xyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG59XHJcblxyXG4vLyBNb2RhbFxyXG5cclxubGV0IGdldE1vZGFsVGVtcGxhdGUgPSAoY29udGVudCkgPT4ge1xyXG4gICAgcmV0dXJuIGBcclxuICAgICAgICA8ZGl2IGNsYXNzPVwib3ZlcmxheVwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtYm9keVwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWhlYWRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS10eXBlPVwiY2xvc2VcIiBjbGFzcz1cIm1vZGFsLWNsb3NlXCI+JnRpbWVzOzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICR7Y29udGVudH1cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIGBcclxufTtcclxuXHJcbmNsYXNzIE1vZGFsIHtcclxuICAgIGNvbnN0cnVjdG9yKHNlbGVjdG9yLCBvcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy4kZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLnNlbGVjdG9yID0gc2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5vcGVuQnV0dG9uID0gb3B0aW9ucy5vcGVuQnV0dG9uO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKG9wdGlvbnMub3BlbkJ1dHRvbik7XHJcbiAgICAgICAgdGhpcy4jcmVuZGVyKCk7XHJcbiAgICAgICAgdGhpcy4jc2V0dXAoKTtcclxuICAgIH1cclxuICAgICNyZW5kZXIoKSB7XHJcbiAgICAgICAgbGV0IGNvbnRlbnQgPSB0aGlzLiRlbC5pbm5lckhUTUw7XHJcbiAgICAgICAgdGhpcy4kZWwuY2xhc3NMaXN0LmFkZCgnbW9kYWwnKVxyXG4gICAgICAgIHRoaXMuJGVsLmlubmVySFRNTCA9IGdldE1vZGFsVGVtcGxhdGUoY29udGVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgI3NldHVwKCkge1xyXG4gICAgICAgIHRoaXMuY2xpY2tIYW5kbGVyID0gdGhpcy5jbGlja0hhbmRsZXIuYmluZCh0aGlzKTtcclxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmNsaWNrSGFuZGxlcik7XHJcbiAgICAgICAgdGhpcy4kZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmNsaWNrSGFuZGxlcik7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtdHlwZT1cIm9wZW5cIl0nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMub3Blbik7XHJcbiAgICB9XHJcblxyXG4gICAgY2xpY2tIYW5kbGVyKGV2ZW50KSB7XHJcbiAgICAgICAgY29uc3Qge3R5cGV9ID0gZXZlbnQudGFyZ2V0LmRhdGFzZXQ7XHJcbiAgICAgICAgaWYgKHR5cGUgPT09ICdjbG9zZScpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ1RoaXMgbWV0aG9kIGhhcyBiZWVuIHdvcmtlZCEnKVxyXG4gICAgICAgICAgICBjbG9zZSgpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ29wZW4nKSB7XHJcbiAgICAgICAgICAgIHRoaXMub3BlbigpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvcGVuKCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMpO1xyXG4gICAgICAgIHRoaXMuJGVsLmNsYXNzTGlzdC5hZGQoJ29wZW4nKTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZSgpIHtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuc2VsZWN0b3IpLmNsYXNzTGlzdC5yZW1vdmUoJ29wZW4nKTtcclxuICAgIH1cclxufVxyXG5cclxubGV0IG1vZGFsID0gbmV3IE1vZGFsKCcjbW9kYWwnLCB7XHJcbiAgICBvcGVuQnV0dG9uOiAnI29wZW5Nb2RhbCcsXHJcbn0pO1xyXG5cclxud2luZG93Lm0gPSBtb2RhbDtcclxuXHJcbi8vIEJ1cmdlciBNZW51XHJcblxyXG5jb25zdCBidXJnZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYnVyZ2VyJyk7XHJcbmNvbnN0IGNsb3NlTWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjbG9zZU1lbnUnKTtcclxuXHJcbmJ1cmdlci5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ2FoYWhoYWhhJyk7XHJcbn0pO1xyXG5cclxuLy8iXX0=
