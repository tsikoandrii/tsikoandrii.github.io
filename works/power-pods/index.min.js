"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// Param Getter
var getUrlParameter = function getUrlParameter(sParam) {
  var sPageURL = decodeURIComponent(window.location.search.substring(1)),
    sURLVariables = sPageURL.split('&'),
    sParameterName,
    i;

  for (i = 0; i < sURLVariables.length; i++) {
    sParameterName = sURLVariables[i].split('=');

    if (sParameterName[0] === sParam) {
      return sParameterName[1] === undefined ? true : sParameterName[1];
    }
  }
};

var rewriteUTM = function rewriteUTM(options) {
  var readyParams = options.map(function (item) {
    var value = getUrlParameter(item.name) || '';

    if (item.replacement) {
      return "".concat(item.replacement, "=").concat(value);
    } else {
      return "".concat(item.name, "=").concat(value);
    }
  });
  return readyParams.join('&');
};

var QuizInit = function QuizInit(form, start) {
  // UTM метки
  var questions = form.querySelectorAll('[data-component="question"]');
  var finalBlock = form.querySelector('[data-component="finalBlock"]');
  var progressBar = form.querySelector('[data-component="progressBar"]');

  var quizLength = _toConsumableArray(questions).filter(function (question) {
    return !question.dataset.to;
  }).length; // Function Variables


  var current = 0; // Functions //

  var setCurrentQuestion = function setCurrentQuestion(index) {
    current = index;
    questions[index].classList.remove('hidden');
  };

  var updateProgressBar = function updateProgressBar(length, index) {
    var procent = 100 - 100 / length * (length - index);
    progressBar.querySelector('.progress-value').innerHTML = "".concat(procent, "% complete");
    progressBar.querySelector('.progress-bar-body div').style.width = procent + '%';
    progressBar.classList.remove('hidden');
  };

  var nextQuestion = function nextQuestion(index) {
    if (index >= questions.length) {
      questions[current].classList.add('hidden');
      progressBar.classList.add('hidden');
      current = null;
      finalBlock.classList.remove('hidden');
      return false;
    }

    if (index >= start) {
      updateProgressBar(quizLength, index);
    }

    questions[current].classList.add('hidden');
    current = index;
    questions[current].classList.remove('hidden');
  }; // Hidden All Questions


  questions.forEach(function (question) {
    question.classList.add('hidden');
  });
  finalBlock.classList.add('hidden');
  progressBar.classList.add('hidden'); // Set Start Value

  setCurrentQuestion(current);
  form.addEventListener('change', function (_ref) {
    var target = _ref.target;

    // Functional for Branching!
    if (target.dataset.to) {
      setTimeout(function () {
        return nextQuestion(Number(target.dataset.to));
      }, 100);
    } else {
      setTimeout(function () {
        return nextQuestion(current + 1);
      }, 100);
    }
  });
};

var quiz = QuizInit(document.getElementById('form'), 2);